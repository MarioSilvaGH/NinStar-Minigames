<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Váriaveis de Inicialização
grav = 0.2;
hsp = 0;
vsp = 0;
jumpspeed = 7;
movespeed = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Inputs do jogador
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_space);

//Reagir aos inputs
move = key_left + key_right;
hsp = move * movespeed;
if(vsp &lt; 10) vsp += grav;

if(place_meeting(x,y+1,obj_solid)){

    vsp = key_jump * -jumpspeed;
};


//Colisão Horizontal
if (place_meeting(x+hsp,y,obj_solid)){

    while(!place_meeting(x+sign(hsp),y,obj_solid)){
    
        x += sign(hsp);
    };
    hsp = 0;
};
x += hsp;

//Colisão Vertical
if (place_meeting(x,y+vsp,obj_solid)){

    while(!place_meeting(x,y+sign(vsp),obj_solid)){
    
        y += sign(vsp);
    };
    vsp = 0;
};
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

//Bounding Box
draw_set_alpha(0.4);
draw_set_color(c_red);
draw_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,0);

//Origin
draw_set_alpha(0.4);
draw_set_color(c_yellow);
draw_line(x,0,x,999); //H
draw_line(0,y,999,y); //V

draw_set_alpha(0.9);
draw_set_color(c_aqua);
draw_set_font(global.font);

draw_text(0,7*0,"X: "+string(x));
draw_text(0,7*1,"Y: "+string(y));
draw_text(0,7*2,"HSPEED: "+string(hspeed));
draw_text(0,7*3,"VSPEED: "+string(vspeed));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
